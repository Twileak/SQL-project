--TWORZENIE TABEL WYMIAROW
CREATE TABLE W_ROK(
    ID_ROK NUMBER(3) PRIMARY KEY,
    ROK NUMBER(4)
    );
    
CREATE TABLE W_MIESIAC(
    ID_MIESIAC NUMBER(3) PRIMARY KEY,
    MIESIAC NUMBER(2),
    NAZWA_MIESIACA VARCHAR2(12),
    KWARTAL NUMBER(1),
    ID_ROKU NUMBER(3)
    );
    
CREATE TABLE W_PRODUKT(
    ID_PRODUKTU NUMBER(2) PRIMARY KEY,
    NAZWA_PRODUKTU VARCHAR2(20),
    TYP NUMBER(1)
    );

CREATE TABLE W_SKLEP(
    ID_SKLEP NUMBER(2) PRIMARY KEY,
    NAZWA_SKLEPU VARCHAR(8)
    );
    
--DOLACZENIE KLUCZY OBCYCH
ALTER TABLE W_MIESIAC add constraint obcy FOREIGN KEY(ID_ROKU) REFERENCES W_ROK(ID_ROK);

--UTWORZENIE TABLICY FAKTOW
CREATE TABLE F_PROMOCJA(
    ID_PRODUKTU NUMBER(2),
    ID_SKLEPU NUMBER(2),
    ID_MIESIACA NUMBER(3),
    ILOSC_PROMOCJI NUMBER(3)
    );

--DOLACZENIE KLUCZY OBCYCH
ALTER TABLE F_PROMOCJA add constraint MIESIAC FOREIGN KEY(ID_MIESIACA) REFERENCES W_MIESIAC(ID_MIESIAC);
ALTER TABLE F_PROMOCJA add constraint PRODUKT FOREIGN KEY(ID_PRODUKTU) REFERENCES W_PRODUKT(ID_PRODUKTU);
ALTER TABLE F_PROMOCJA add constraint SKLEP FOREIGN KEY(ID_SKLEPU) REFERENCES W_SKLEP(ID_SKLEP);

--UTWORZENIE SEKWENCJI
CREATE SEQUENCE SEQ_W_MIESIAC;
CREATE SEQUENCE SEQ_W_ROK;
CREATE SEQUENCE SEQ_W_SKLEP;
CREATE SEQUENCE SEQ_W_PRODUKT;

--UTWORZENIE WYZWALACZY
CREATE OR REPLACE TRIGGER T_W_MIESIAC
BEFORE INSERT
ON W_MIESIAC
FOR EACH ROW
BEGIN
    :NEW.ID_MIESIAC := SEQ_W_MIESIAC.NEXTVAL;
END;

CREATE OR REPLACE TRIGGER T_W_ROK
BEFORE INSERT
ON W_ROK
FOR EACH ROW
BEGIN
    :NEW.ID_ROK := SEQ_W_ROK.NEXTVAL;
END;

CREATE OR REPLACE TRIGGER T_W_PRODUKT
BEFORE INSERT
ON W_PRODUKT
FOR EACH ROW
BEGIN
    :NEW.ID_PRODUKTU := SEQ_W_PRODUKT.NEXTVAL;
END;

CREATE OR REPLACE TRIGGER T_W_SKLEP
BEFORE INSERT
ON W_SKLEP
FOR EACH ROW
BEGIN
    :NEW.ID_SKLEP := SEQ_W_SKLEP.NEXTVAL;
END;

--UTWORZENIE I WYWOLYWANIE PROCEDUR UZUPELNIAJACYCH DANYMI TABELE WYMIAROW

CREATE OR REPLACE PROCEDURE P_LOAD_INTO_W_ROK IS
    BEGIN
        MERGE INTO W_ROK R
        USING(SELECT DISTINCT EXTRACT(YEAR FROM P.DATA_OD) YEAR
            FROM PROMOCJA P) SUB
        ON(R.ROK = SUB.YEAR)
        WHEN NOT MATCHED THEN
        INSERT(R.ROK) VALUES(SUB.YEAR);
    END;
EXECUTE P_LOAD_INTO_W_ROK;
SELECT * FROM W_ROK;

CREATE OR REPLACE PROCEDURE P_LOAD_INTO_W_MIESIAC IS
    BEGIN
        MERGE INTO W_MIESIAC M
        USING(SELECT DISTINCT 
            EXTRACT(MONTH FROM P.DATA_OD) MIES,
            TO_CHAR(P.DATA_OD,'MONTH') NAZWA,
            TO_NUMBER(TO_CHAR(P.DATA_OD,'Q')) KWART,
            R.ID_ROK IDR
            FROM PROMOCJA P, W_ROK R) SUB
        ON(SUB.MIES=M.MIESIAC)
        WHEN NOT MATCHED THEN
        INSERT(MIESIAC, NAZWA_MIESIACA, KWARTAL, ID_ROKU)
        VALUES(SUB.MIES, SUB.NAZWA, SUB.KWART, SUB.IDR);
    END;
EXECUTE P_LOAD_INTO_W_MIESIAC;
SELECT * FROM W_MIESIAC;

CREATE OR REPLACE PROCEDURE P_LOAD_INTO_W_SKLEP IS
    BEGIN
        MERGE INTO W_SKLEP S
        USING(SELECT DISTINCT SK.NAZWA
            FROM SKLEP SK) SUB
        ON(S.NAZWA_SKLEPU = SUB.NAZWA)
        WHEN NOT MATCHED THEN
        INSERT(S.NAZWA_SKLEPU) VALUES(SUB.NAZWA);
    END;
EXECUTE P_LOAD_INTO_W_SKLEP;
SELECT * FROM W_SKLEP;

CREATE OR REPLACE PROCEDURE P_LOAD_INTO_W_PRODUKT IS
    BEGIN
        MERGE INTO W_PRODUKT P
        USING(SELECT DISTINCT NAZWA, TYP
            FROM PRODUKT ) SUB
        ON(SUB.NAZWA = P.NAZWA_PRODUKTU)
        WHEN NOT MATCHED THEN
        INSERT(P.NAZWA_PRODUKTU, P.TYP) VALUES(SUB.NAZWA, SUB.TYP);
    END;
EXECUTE P_LOAD_INTO_W_PRODUKT;
SELECT * FROM W_PRODUKT;

--FUNKCJA WYKORZYSTANA PRZY PROCEDURZE TWORZENIA TABELI FAKTOW. 
--UTWORZYLISMY TA FUNKCJE W CELU OSIAGNIECIA BARDZIEJ CZYTELNEJ PROCEDURY P_LOAD_INTO_F_PROMOCJA

CREATE OR REPLACE FUNCTION F_ILOSC_PROMOCJI
        (F_MIESIAC NUMBER, F_ROK NUMBER, F_SKLEP PROMOCJA.ID_SKLEPU%TYPE, F_TYP PRODUKT.TYP%TYPE)
        RETURN NUMBER IS PROMOCJE NUMBER;
    BEGIN
    SELECT COUNT(ID_PROMOCJI)
    INTO PROMOCJE
    FROM W_ROK R, W_MIESIAC M, PROMOCJA P, PRODUKT PR
    WHERE R.ID_ROK = M.ID_ROKU 
        AND PR.ID_PRODUKTU = P.ID_PRODUKTU 
        AND F_MIESIAC = M.MIESIAC
	AND EXTRACT(MONTH FROM P.DATA_OD) = M.MIESIAC
        AND EXTRACT(YEAR FROM P.DATA_OD) = R.ROK 
        AND F_ROK = R.ROK
        AND P.ID_SKLEPU = F_SKLEP
        AND PR.TYP = F_TYP;
    RETURN PROMOCJE;
END;

--PROCEDURA TWORZACA TABELE FAKTOW

CREATE OR REPLACE PROCEDURE P_LOAD_INTO_F_PROMOCJA IS
    BEGIN
        MERGE INTO F_PROMOCJA P
        USING(SELECT PR.ID_PRODUKTU PROD, S.ID_SKLEP SKL, M.ID_MIESIAC MIES, 
                    F_ILOSC_PROMOCJI(M.MIESIAC, R.ROK, S.ID_SKLEP, PR.TYP) PROMKI
            FROM W_MIESIAC M, W_ROK R, W_PRODUKT PR, W_SKLEP S) SUB
        ON(SUB.PROD = P.ID_PRODUKTU 
            AND SUB.SKL = P.ID_SKLEPU
            AND SUB.MIES = P.ID_MIESIACA)
        WHEN NOT MATCHED THEN
        INSERT(ID_PRODUKTU, ID_SKLEPU, ID_MIESIACA, ILOSC_PROMOCJI) 
        VALUES(SUB.PROD, SUB.SKL, SUB.MIES, SUB.PROMKI);
    END;

--WYWOLANIE PROCEDURY I PRZYKLADOWE POLECENIE SELECT DO TABELI FAKTOW
EXECUTE P_LOAD_INTO_F_PROMOCJA;
SELECT * FROM F_PROMOCJA
ORDER BY ILOSC_PROMOCJI DESC;
